"use strict";(self.webpackChunksenai_nosql=self.webpackChunksenai_nosql||[]).push([[5827],{3905:(o,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(o,e,n){return e in o?Object.defineProperty(o,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):o[e]=n,o}function i(o,e){var n=Object.keys(o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(o);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),n.push.apply(n,a)}return n}function t(o){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(o,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(n,e))}))}return o}function s(o,e){if(null==o)return{};var n,a,r=function(o,e){if(null==o)return{};var n,a,r={},i=Object.keys(o);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=o[n]);return r}(o,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(o);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(o,n)&&(r[n]=o[n])}return r}var d=a.createContext({}),m=function(o){var e=a.useContext(d),n=e;return o&&(n="function"==typeof o?o(e):t(t({},e),o)),n},c=function(o){var e=m(o.components);return a.createElement(d.Provider,{value:e},o.children)},u="mdxType",l={inlineCode:"code",wrapper:function(o){var e=o.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(o,e){var n=o.components,r=o.mdxType,i=o.originalType,d=o.parentName,c=s(o,["components","mdxType","originalType","parentName"]),u=m(n),p=r,g=u["".concat(d,".").concat(p)]||u[p]||l[p]||i;return n?a.createElement(g,t(t({ref:e},c),{},{components:n})):a.createElement(g,t({ref:e},c))}));function g(o,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof o||r){var i=n.length,t=new Array(i);t[0]=p;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=o,s[u]="string"==typeof o?o:r,t[1]=s;for(var m=2;m<i;m++)t[m]=n[m];return a.createElement.apply(null,t)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9126:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const i={id:"relacionamento-um-para-muitos",slug:"relacionamento-um-para-muitos",title:"Um para Muitos",sidebar_position:1,tags:["relacionamento","um para muitos"]},t="Relacionmento Um para Muitos em MongoDB",s={unversionedId:"nosql/MongoDB/relacionamentos/relacionamento-um-para-muitos",id:"nosql/MongoDB/relacionamentos/relacionamento-um-para-muitos",title:"Um para Muitos",description:'No MongoDB, voc\xea pode representar relacionamentos "um para muitos" (1:N) usando documentos incorporados (embedded documents) em um \xfanico documento pai. Vamos dar um exemplo de como voc\xea pode modelar um relacionamento "um para muitos" usando documentos incorporados no MongoDB.',source:"@site/docs/nosql/MongoDB/relacionamentos/um-para-muitos.mdx",sourceDirName:"nosql/MongoDB/relacionamentos",slug:"/nosql/MongoDB/relacionamentos/relacionamento-um-para-muitos",permalink:"/senai-nosql/docs/nosql/MongoDB/relacionamentos/relacionamento-um-para-muitos",draft:!1,editUrl:"https://github.com/jcristiano/senai-nosql/tree/main/docs/nosql/MongoDB/relacionamentos/um-para-muitos.mdx",tags:[{label:"relacionamento",permalink:"/senai-nosql/docs/tags/relacionamento"},{label:"um para muitos",permalink:"/senai-nosql/docs/tags/um-para-muitos"}],version:"current",sidebarPosition:1,frontMatter:{id:"relacionamento-um-para-muitos",slug:"relacionamento-um-para-muitos",title:"Um para Muitos",sidebar_position:1,tags:["relacionamento","um para muitos"]},sidebar:"nosqlSidebar",previous:{title:"Relacionamentos",permalink:"/senai-nosql/docs/category/relacionamentos"}},d={},m=[{value:"Um exemplo de uso: Rela\xe7\xe3o setores e funcionarios",id:"um-exemplo-de-uso-rela\xe7\xe3o-setores-e-funcionarios",level:2},{value:"O tipo de documento incorporado",id:"o-tipo-de-documento-incorporado",level:2},{value:"Representa\xe7\xe3o simplificada do modelo em json",id:"representa\xe7\xe3o-simplificada-do-modelo-em-json",level:2},{value:"Cria\xe7\xe3o da estrutura em MongoDB",id:"cria\xe7\xe3o-da-estrutura-em-mongodb",level:2},{value:"Inserindo os primeiros dados em nossa cole\xe7\xe3o",id:"inserindo-os-primeiros-dados-em-nossa-cole\xe7\xe3o",level:2},{value:"Ajustando a regra de valida\xe7\xe3o",id:"ajustando-a-regra-de-valida\xe7\xe3o",level:2},{value:"Agora \xe9 como voc\xea",id:"agora-\xe9-como-voc\xea",level:2}],c={toc:m},u="wrapper";function l(o){let{components:e,...n}=o;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"relacionmento-um-para-muitos-em-mongodb"},"Relacionmento Um para Muitos em MongoDB"),(0,r.kt)("p",null,'No MongoDB, voc\xea pode representar relacionamentos "um para muitos" (1:N) usando documentos incorporados (embedded documents) em um \xfanico documento pai. Vamos dar um exemplo de como voc\xea pode modelar um relacionamento "um para muitos" usando documentos incorporados no MongoDB.'),(0,r.kt)("h2",{id:"um-exemplo-de-uso-rela\xe7\xe3o-setores-e-funcionarios"},"Um exemplo de uso: Rela\xe7\xe3o setores e funcionarios"),(0,r.kt)("p",null,'Suponha que voc\xea esteja gerenciando informa\xe7\xf5es sobre setores de uma corpora\xe7\xe3o e seus funcionarios associados. Cada setor pode ter v\xe1rios funcion\xe1rios, o que se encaixa no cen\xe1rio "um setor tem muitos funcion\xe1rios" (1:N). Voc\xea pode representar isso da seguinte forma:'),(0,r.kt)("mermaid",{value:"erDiagram\n    SETORES ||--o{ FUNCIONARIOS : trabalham\n    SETORES {\n        string nome\n        string sigla        \n    }\n    FUNCIONARIOS {\n        string nome\n        string cargo\n        int modulo\n        double salario\n        date dataContratacao\n        bool ativo\n    }"}),(0,r.kt)("mermaid",{value:"graph LR  \n  Corporacao1[Empresa] ---\x3e Setor1[Recursos Humanos] --\x3e Funcionario1[Amanda Oliveira Santanna]  \n  Setor1[Recursos Humanos] --\x3e Funcionario2[Anderson Campos Monteiro]\n  Corporacao1[Empresa] ---\x3e Setor2[Marketing] --\x3e Funcionario3[Washington Marcondes Nunes]\n  Setor2[Marketing] --\x3e Funcionario4[Bruna Correia da Fonseca]\n  Corporacao1[Empresa] ---\x3e Setor3[Tecnologia e Engenharia] --\x3e Funcionario5[Pedro Antunes Silva Barros]\n  Setor3[Tecnologia e Engenharia] --\x3e Funcionario6[Caroline Gouvea do Prado]\n  Setor3[Tecnologia e Engenharia] --\x3e Funcionario7[Alisson Mendon\xe7a Pereira]"}),(0,r.kt)("h2",{id:"o-tipo-de-documento-incorporado"},"O tipo de documento incorporado"),(0,r.kt)("p",null,'No MongoDB, o tipo "embedded document" (documento incorporado) refere-se a um m\xe9todo de modelagem de dados em que documentos inteiros s\xe3o incorporados como campos em outro documento. Essa \xe9 uma das abordagens para modelar relacionamentos de dados no MongoDB, onde os dados relacionados s\xe3o armazenados dentro do documento pai em vez de criar cole\xe7\xf5es separadas com refer\xeancias cruzadas.'),(0,r.kt)("p",null,"Aqui est\xe3o algumas informa\xe7\xf5es importantes sobre documentos incorporados no MongoDB:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Documentos Aninhados: Os documentos incorporados s\xe3o frequentemente referidos como "documentos aninhados". Eles s\xe3o usados para representar dados relacionados dentro de um \xfanico documento.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Vantagens:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Desempenho"),": A recupera\xe7\xe3o de dados relacionados \xe9 eficiente, pois todos os dados necess\xe1rios est\xe3o em um \xfanico documento, reduzindo a necessidade de v\xe1rias consultas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Integridade Referencial"),": N\xe3o h\xe1 necessidade de lidar com refer\xeancias cruzadas ou manter consist\xeancia entre documentos em cole\xe7\xf5es separadas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Atomicidade"),": As opera\xe7\xf5es de leitura e grava\xe7\xe3o em documentos incorporados s\xe3o atomicamente garantidas."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Desvantagens:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Duplica\xe7\xe3o de Dados"),": Os dados podem ser duplicados em v\xe1rios documentos, o que pode aumentar o consumo de armazenamento. Isso tamb\xe9m significa que, se os dados precisarem ser atualizados em v\xe1rios lugares, \xe9 necess\xe1rio cuidado extra para manter a consist\xeancia."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Limita\xe7\xe3o de Tamanho"),": Os documentos no MongoDB t\xeam um limite de tamanho (16 MB). Se a quantidade de dados incorporados for grande, isso pode ser uma limita\xe7\xe3o.")))),(0,r.kt)("p",null,"Quando Usar Documentos Incorporados:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'Use documentos incorporados quando os dados relacionados s\xe3o usados principalmente em conjunto e a leitura eficiente desses dados \xe9 fundamental.\nPode ser apropriado em cen\xe1rios "um para muitos" (1:N) e "um para poucos" (1:Few) quando os "muitos" ou "poucos" n\xe3o s\xe3o excessivamente numerosos.\nQuando Evitar Documentos Incorporados:')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Evite documentos incorporados quando os dados relacionados s\xe3o usados independentemente ou precisam ser atualizados em v\xe1rias inst\xe2ncias, o que pode tornar a manuten\xe7\xe3o mais complexa.\nA escolha entre documentos incorporados e refer\xeancias cruzadas depende das necessidades espec\xedficas do seu aplicativo. O MongoDB oferece flexibilidade para modelar dados de acordo com os requisitos do seu caso de uso, permitindo que voc\xea escolha a abordagem mais adequada para cada tipo de rela\xe7\xe3o."))),(0,r.kt)("h2",{id:"representa\xe7\xe3o-simplificada-do-modelo-em-json"},"Representa\xe7\xe3o simplificada do modelo em json"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{\n    setor,\n    funcionarios: [\n\n    ]\n}\n")),(0,r.kt)("h2",{id:"cria\xe7\xe3o-da-estrutura-em-mongodb"},"Cria\xe7\xe3o da estrutura em MongoDB"),(0,r.kt)("p",null,"Execute o procedimento de subida da inst\xe2ncia e conecte a nova base:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"use empresa;\n")),(0,r.kt)("p",null,"Agora \xe9 o momento de criar a estrutura da cole\xe7\xe3o:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'db.createCollection("setores", {\n   validator: {\n      $jsonSchema: {\n         bsonType: "object",\n         required: ["_id", "nome", "sigla", "funcionarios"],\n         properties: {\n            _id: {\n               bsonType: "int",\n               description: "ID \xfanico do setor"\n            },\n            nome: {\n               bsonType: "string",\n               description: "Nome do setor"\n            },\n            sigla: {\n               bsonType: "string",\n               description: "Sigla do setor",\n               minLength: 3,\n               maxLength: 5\n            },\n            funcionarios: {\n               bsonType: "array",\n               description: "Array de funcion\xe1rios",\n               items: {\n                  bsonType: "object",\n                  required: ["_id", "nome", "cargo", "modulo", "salario", "dataContratacao", "ativo"],\n                  properties: {\n                     _id: {\n                        bsonType: "int",\n                        description: "ID \xfanico do funcion\xe1rio"\n                     },\n                     nome: {\n                        bsonType: "string",\n                        description: "Nome do funcion\xe1rio"\n                     },\n                     cargo: {\n                        bsonType: "string",\n                        description: "Cargo do funcion\xe1rio"\n                     },\n                     modulo: {\n                        bsonType: "int",\n                        description: "M\xf3dulo do funcion\xe1rio",\n                        minimum: 0,\n                        maximum: 5\n                     },\n                     salario: {\n                        bsonType: "double",\n                        description: "Sal\xe1rio do funcion\xe1rio"\n                     },\n                     dataContratacao: {\n                        bsonType: "date",\n                        description: "Data de contrata\xe7\xe3o do funcion\xe1rio"\n                     },\n                     ativo: {\n                        bsonType: "bool",\n                        description: "Indica se o funcion\xe1rio est\xe1 ativo"\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n});\n')),(0,r.kt)("h2",{id:"inserindo-os-primeiros-dados-em-nossa-cole\xe7\xe3o"},"Inserindo os primeiros dados em nossa cole\xe7\xe3o"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'db.setores.insertMany([\n    {\n        _id: 1,\n        nome: "Recursos Humanos",\n        sigla: "RH",\n        funcionarios: [\n            {\n                _id: 1,\n                nome: "Amanda Oliveira Santanna",\n                cargo: "Analista de Recursos Humanos",\n                modulo: 1,\n                salario: 5034.45,\n                dataContratacao: new ISODate("2020-05-18"),\n                ativo: true,\n            },\n            {\n                _id: 2,\n                nome: "Anderson Campos Monteiro",\n                cargo: "Analista de Recursos Humanos",\n                modulo: 3,\n                salario: 12311.26,\n                dataContratacao: new ISODate("2011-10-01"),\n                ativo: false\n            },        \n        ]\n    },\n    {\n        _id: 2,\n        nome: "Marketing",\n        sigla: "MKT",\n        funcionarios: [\n            {\n                _id: 3,\n                nome: "Washington Marcondes Nunes",\n                cargo: "Analista de Marketing",\n                modulo: 1,\n                salario: 6436.41,\n                dataContratacao: new ISODate("2015-06-12"),\n                ativo: true\n            },\n            {\n                _id: 4,\n                nome: "Bruna Correia da Fonseca",\n                cargo: "Analista de Marketing",\n                modulo: 2,\n                salario: 8122.13,\n                dataContratacao: new ISODate("2013-05-30"),\n                ativo: true\n            },        \n        ]\n    }\n]);\n')),(0,r.kt)("h2",{id:"ajustando-a-regra-de-valida\xe7\xe3o"},"Ajustando a regra de valida\xe7\xe3o"),(0,r.kt)("p",null,"Ao tentar inserir dados na cole\xe7\xe3o, \xe9 poss\xedvel identificar que a sigla RH n\xe3o atende o crit\xe9rio de tamanho do campo."),(0,r.kt)("p",null,"N\xe3o existe uma maneira de aplicar um update no schema validator, mas \xe9 poss\xedvel remov\xea-lo e inclu\xed-lo nomvanete:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'db.runCommand({\n    collMod: "setores",\n    validator: {\n      $jsonSchema: {\n         bsonType: "object",\n         required: ["_id", "nome", "sigla", "funcionarios"],\n         properties: {\n            _id: {\n               bsonType: "int",\n               description: "ID \xfanico do setor"\n            },\n            nome: {\n               bsonType: "string",\n               description: "Nome do setor"\n            },\n            sigla: {\n               bsonType: "string",\n               description: "Sigla do setor",\n               minLength: 2,\n               maxLength: 5\n            },\n            funcionarios: {\n               bsonType: "array",\n               description: "Array de funcion\xe1rios",\n               items: {\n                  bsonType: "object",\n                  required: ["_id", "nome", "cargo", "modulo", "salario", "dataContratacao", "ativo"],\n                  properties: {\n                     _id: {\n                        bsonType: "int",\n                        description: "ID \xfanico do funcion\xe1rio"\n                     },\n                     nome: {\n                        bsonType: "string",\n                        description: "Nome do funcion\xe1rio"\n                     },\n                     cargo: {\n                        bsonType: "string",\n                        description: "Cargo do funcion\xe1rio"\n                     },\n                     modulo: {\n                        bsonType: "int",\n                        description: "M\xf3dulo do funcion\xe1rio",\n                        minimum: 0,\n                        maximum: 5\n                     },\n                     salario: {\n                        bsonType: "double",\n                        description: "Sal\xe1rio do funcion\xe1rio"\n                     },\n                     dataContratacao: {\n                        bsonType: "date",\n                        description: "Data de contrata\xe7\xe3o do funcion\xe1rio"\n                     },\n                     ativo: {\n                        bsonType: "bool",\n                        description: "Indica se o funcion\xe1rio est\xe1 ativo"\n                     }\n                  }\n               }\n            }\n         }\n      }\n    }\n});\n')),(0,r.kt)("h2",{id:"agora-\xe9-como-voc\xea"},"Agora \xe9 como voc\xea"),(0,r.kt)("p",null,"Aplique os ajustes necess\xe1rios para inserir o seguinte documento na cole\xe7\xe3o de ",(0,r.kt)("inlineCode",{parentName:"p"},"setores"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    nome: "Tecnologia e Engenharia",\n    sigla: "GTE",\n    funcionarios: [\n        {\n            nome: "Pedro Antunes Silva Barros",\n            cargo: "Estagi\xe1rio",\n            modulo: 0,\n            salario: 2200.00,\n            dataContratacao: "21/10/2021",\n            ativo: true\n        },\n        {            \n            nome: "Caroline Gouvea do Prado",\n            cargo: "Desenvolvedor FullStack",\n            modulo: "4",\n            salario: "18246.78",\n            dataContratacao: "01/02/2011",\n            ativo: true\n        },\n        {            \n            nome: "Alisson Mendon\xe7a Pereira",\n            cargo: "Analista de DevOps",\n            modulo: "2",\n            salario: "8451.89",\n            dataContratacao: "07/07/2018",\n            ativo: true\n        },\n    ]\n}\n')))}l.isMDXComponent=!0}}]);