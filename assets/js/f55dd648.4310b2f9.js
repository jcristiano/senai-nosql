"use strict";(self.webpackChunksenai_nosql=self.webpackChunksenai_nosql||[]).push([[4958],{3905:(e,a,o)=>{o.d(a,{Zo:()=>d,kt:()=>v});var n=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function r(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?r(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,n,t=function(e,a){if(null==e)return{};var o,n,t={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=n.createContext({}),c=function(e){var a=n.useContext(l),o=a;return e&&(o="function"==typeof e?e(a):i(i({},a),e)),o},d=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var o=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(o),u=t,v=m["".concat(l,".").concat(u)]||m[u]||p[u]||r;return o?n.createElement(v,i(i({ref:a},d),{},{components:o})):n.createElement(v,i({ref:a},d))}));function v(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=o.length,i=new Array(r);i[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[m]="string"==typeof e?e:t,i[1]=s;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},5466:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=o(7462),t=(o(7294),o(3905));const r={id:"relacionamento-um-para-muitos-avaliacao-contexto",slug:"relacionamento-um-para-muitos-avaliacao-contexto",title:"Contexto",sidebar_position:1,tags:["atividade","contexto","avaliacao"]},i="Vamos organizar uma categoria de jogos",s={unversionedId:"nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-contexto",id:"nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-contexto",title:"Contexto",description:"Contexto",source:"@site/docs/nosql/MongoDB/relacionamentos/avaliacao/001-contexto.mdx",sourceDirName:"nosql/MongoDB/relacionamentos/avaliacao",slug:"/nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-contexto",permalink:"/senai-nosql/docs/nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-contexto",draft:!1,editUrl:"https://github.com/jcristiano/senai-nosql/tree/main/docs/nosql/MongoDB/relacionamentos/avaliacao/001-contexto.mdx",tags:[{label:"atividade",permalink:"/senai-nosql/docs/tags/atividade"},{label:"contexto",permalink:"/senai-nosql/docs/tags/contexto"},{label:"avaliacao",permalink:"/senai-nosql/docs/tags/avaliacao"}],version:"current",sidebarPosition:1,frontMatter:{id:"relacionamento-um-para-muitos-avaliacao-contexto",slug:"relacionamento-um-para-muitos-avaliacao-contexto",title:"Contexto",sidebar_position:1,tags:["atividade","contexto","avaliacao"]},sidebar:"nosqlSidebar",previous:{title:"Exerc\xedcio para Avalia\xe7\xe3o",permalink:"/senai-nosql/docs/category/exerc\xedcio-para-avalia\xe7\xe3o"},next:{title:"Exerc\xedcios",permalink:"/senai-nosql/docs/nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-exercicios"}},l={},c=[{value:"Contexto",id:"contexto",level:2},{value:"Cria\xe7\xe3o da cole\xe7\xe3o incorporada",id:"cria\xe7\xe3o-da-cole\xe7\xe3o-incorporada",level:2},{value:"Cria\xe7\xe3o da cole\xe7\xe3o CATEGORIAS",id:"cria\xe7\xe3o-da-cole\xe7\xe3o-categorias",level:2},{value:"Inserindo nossos dados",id:"inserindo-nossos-dados",level:2}],d={toc:c},m="wrapper";function p(e){let{components:a,...o}=e;return(0,t.kt)(m,(0,n.Z)({},d,o,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"vamos-organizar-uma-categoria-de-jogos"},"Vamos organizar uma categoria de jogos"),(0,t.kt)("h2",{id:"contexto"},"Contexto"),(0,t.kt)("p",null,"Estamos organizando uma forma de representar a rela\xe7\xe3o entre categorias de jogos e seus correspondentes itens. Optamos por utilizar uma estrat\xe9gia de documento incorporado para representar essa rela\xe7\xe3o, j\xe1 que podemos ter a seguinte rela\xe7\xe3o de depend\xeancia entre eles:"),(0,t.kt)("mermaid",{value:"erDiagram\n    CATEGORIAS ||--o{ TITULOS : possuem\n    CATEGORIAS {\n        string nome\n        string sigla        \n    }\n    TITULOS {\n        string nome\n        string desenvolvedora\n        date data_lancamento\n        string plataformas\n        double valor\n    }"}),(0,t.kt)("mermaid",{value:"graph LR  \n  Jogo1[Jogos] ---\x3e Categorias1[A\xe7\xe3o] --\x3e Titulo1[Call of Duty: Warzone]\n  Categorias1[A\xe7\xe3o] --\x3e Titulo2[Assassin's Creed Valhalla]\n  Categorias1[A\xe7\xe3o] --\x3e Titulo3[Red Dead Redemption 2]\n  Jogo1[Jogos] ---\x3e Categorias2[RPG] --\x3e Titulo4[The Witcher 3: Wild Hunt]\n  Jogo1[Jogos] ---\x3e Categorias3[Esportes] --\x3e Titulo5[FIFA 22]\n  Categorias3[Esportes] --\x3e Titulo6[NBA 2K22]\n  Jogo1[Jogos] ---\x3e Categorias4[Aventura] --\x3e Titulo7[The Legend of Zelda: Breath of the Wild]\n  Jogo1[Jogos] ---\x3e Categorias5[Simula\xe7\xe3o] --\x3e Titulo8[The Sims 4]\n  Categorias5[Simula\xe7\xe3o] --\x3e Titulo9[Cities: Skylines]"}),(0,t.kt)("h2",{id:"cria\xe7\xe3o-da-cole\xe7\xe3o-incorporada"},"Cria\xe7\xe3o da cole\xe7\xe3o incorporada"),(0,t.kt)("p",null,"Primeiro, crie um banco de dados chamado ",(0,t.kt)("inlineCode",{parentName:"p"},"jogos"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"use jogos;\n")),(0,t.kt)("admonition",{type:"note"},(0,t.kt)("p",{parentName:"admonition"},"No NoSQLBooster voc\xea deve utilizar o menu de contexto para cria\xe7\xe3o do banco jogos.\nNo mesmo menu de contexto, voc\xea deve uma sess\xe3o de comandos.")),(0,t.kt)("h2",{id:"cria\xe7\xe3o-da-cole\xe7\xe3o-categorias"},"Cria\xe7\xe3o da cole\xe7\xe3o CATEGORIAS"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'db.createCollection("categorias", {\n  validator: {\n    $jsonSchema: {\n      bsonType: "object",\n      required: ["sigla", "nome", "titulos"],\n      properties: {\n        sigla: {\n          bsonType: "string",\n          description: "Deve ser uma string representando a sigla da categoria com no m\xe1ximo 5 caracteres.",\n          maxLength: 5\n        },\n        nome: {\n          bsonType: "string",\n          description: "Deve ser uma string representando o nome da categoria."\n        },\n        titulos: {\n          bsonType: "array",\n          description: "Deve ser uma matriz de t\xedtulos de jogos relacionados \xe0 categoria.",\n          items: {\n            bsonType: "object",\n            required: ["nome", "desenvolvedora", "data_lancamento", "plataformas", "valor"],\n            properties: {\n              nome: {\n                bsonType: "string",\n                description: "Deve ser uma string representando o nome do jogo."\n              },\n              desenvolvedora: {\n                bsonType: "string",\n                description: "Deve ser uma string representando a desenvolvedora do jogo."\n              },\n              data_lancamento: {\n                bsonType: "date",\n                description: "Deve ser uma data no formato ISODate representando a data de lan\xe7amento do jogo."\n              },\n              plataformas: {\n                bsonType: "array",\n                description: "Deve ser uma matriz de plataformas em que o jogo est\xe1 dispon\xedvel.",\n                items: {\n                  bsonType: "string",\n                  description: "Deve ser uma das plataformas aceit\xe1veis (PlayStation, XBox, PC).",\n                  enum: ["PlayStation", "XBox", "PC", "Nintendo Switch"]\n                }\n              },\n              valor: {\n                bsonType: "double",\n                description: "Deve ser um n\xfamero de ponto flutuante representando o valor do jogo.",\n                minimum: 0.01\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n});\n')),(0,t.kt)("h2",{id:"inserindo-nossos-dados"},"Inserindo nossos dados"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'db.categorias.insertMany([\n  {\n    "sigla": "AC",\n    "nome": "A\xe7\xe3o",\n    "titulos": [\n      {\n        "nome": "Call of Duty: Warzone",\n        "desenvolvedora": "Infinity Ward",\n        "data_lancamento": ISODate("2020-03-10T00:00:00Z"),\n        "plataformas": ["PlayStation", "XBox"],\n        "valor": 59.99\n      },\n      {\n        "nome": "Assassin\'s Creed Valhalla",\n        "desenvolvedora": "Ubisoft",\n        "data_lancamento": ISODate("2020-11-10T00:00:00Z"),\n        "plataformas": ["PC", "PlayStation", "XBox"],\n        "valor": 49.99\n      },\n      {\n        "nome": "Red Dead Redemption 2",\n        "desenvolvedora": "Rockstar Games",\n        "data_lancamento": ISODate("2018-10-26T00:00:00Z"),\n        "plataformas": ["PlayStation", "XBox"],\n        "valor": 39.99\n      }\n    ]\n  },\n  {\n    "sigla": "RPG",\n    "nome": "RPG",\n    "titulos": [\n      {\n        "nome": "The Witcher 3: Wild Hunt",\n        "desenvolvedora": "CD Projekt Red",\n        "data_lancamento": ISODate("2015-05-19T00:00:00Z"),\n        "plataformas": ["PC", "PlayStation", "XBox"],\n        "valor": 29.99\n      }\n    ]\n  },\n  {\n    "sigla": "ES",\n    "nome": "Esportes",\n    "titulos": [\n      {\n        "nome": "FIFA 22",\n        "desenvolvedora": "EA Sports",\n        "data_lancamento": ISODate("2021-10-01T00:00:00Z"),\n        "plataformas": ["PlayStation", "XBox", "PC"],\n        "valor": 49.99\n      },\n      {\n        "nome": "NBA 2K22",\n        "desenvolvedora": "2K Sports",\n        "data_lancamento": ISODate("2021-09-10T00:00:00Z"),\n        "plataformas": ["PlayStation", "XBox", "PC"],\n        "valor": 49.99\n      }\n    ]\n  },\n  {\n    "sigla": "ADV",\n    "nome": "Aventura",\n    "titulos": [\n      {\n        "nome": "The Legend of Zelda: Breath of the Wild",\n        "desenvolvedora": "Nintendo",\n        "data_lancamento": ISODate("2017-03-03T00:00:00Z"),\n        "plataformas": ["Nintendo Switch"],\n        "valor": 49.99\n      }\n    ]\n  },\n  {\n    "sigla": "SIM",\n    "nome": "Simula\xe7\xe3o",\n    "titulos": [\n      {\n        "nome": "The Sims 4",\n        "desenvolvedora": "Maxis",\n        "data_lancamento": ISODate("2014-09-02T00:00:00Z"),\n        "plataformas": ["PC"],\n        "valor": 19.99\n      },\n      {\n        "nome": "Cities: Skylines",\n        "desenvolvedora": "Paradox Interactive",\n        "data_lancamento": ISODate("2015-03-10T00:00:00Z"),\n        "plataformas": ["PC", "PlayStation", "XBox"],\n        "valor": 29.99\n      }\n    ]\n  }\n]);\n')))}p.isMDXComponent=!0}}]);