"use strict";(self.webpackChunksenai_nosql=self.webpackChunksenai_nosql||[]).push([[2727],{3905:(e,n,o)=>{o.d(n,{Zo:()=>p,kt:()=>g});var r=o(7294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function s(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?s(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function c(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var i=r.createContext({}),l=function(e){var n=r.useContext(i),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},p=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(o),m=t,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return o?r.createElement(g,a(a({ref:n},p),{},{components:o})):r.createElement(g,a({ref:n},p))}));function g(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var s=o.length,a=new Array(s);a[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"==typeof e?e:t,a[1]=c;for(var l=2;l<s;l++)a[l]=o[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},7718:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=o(7462),t=(o(7294),o(3905));const s={id:"conexao-nodejs-mongo",slug:"conexao-nodejs-mongo",title:"CRUD NodeJS",sidebar_position:7},a="exemplo de conexao",c={unversionedId:"nosql/MongoDB/conexao-nodejs-mongo",id:"nosql/MongoDB/conexao-nodejs-mongo",title:"CRUD NodeJS",description:"",source:"@site/docs/nosql/MongoDB/003-conexao-nodejs.mdx",sourceDirName:"nosql/MongoDB",slug:"/nosql/MongoDB/conexao-nodejs-mongo",permalink:"/senai-nosql/docs/nosql/MongoDB/conexao-nodejs-mongo",draft:!1,editUrl:"https://github.com/jcristiano/senai-nosql/tree/main/docs/nosql/MongoDB/003-conexao-nodejs.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"conexao-nodejs-mongo",slug:"conexao-nodejs-mongo",title:"CRUD NodeJS",sidebar_position:7},sidebar:"nosqlSidebar",previous:{title:"Exerc\xedcios",permalink:"/senai-nosql/docs/nosql/MongoDB/relacionamentos/avaliacao/relacionamento-um-para-muitos-avaliacao-exercicios"}},i={},l=[],p={toc:l},u="wrapper";function d(e){let{components:n,...o}=e;return(0,t.kt)(u,(0,r.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"exemplo-de-conexao"},"exemplo de conexao"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"title=config/db.js",title:"config/db.js"},'const mongoose = require("mongoose");\n \nmodule.exports = function connectDB() {\n  const url = "mongodb://127.0.0.1/minha_applicacao_node";\n \n  try {\n    mongoose.connect(url, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n  } catch (err) {\n    console.error(err.message);\n    process.exit(1);\n  }\n  const dbConnection = mongoose.connection;\n  dbConnection.once("open", (_) => {\n    console.log(`Database connected: ${url}`);\n  });\n \n  dbConnection.on("error", (err) => {\n    console.error(`connection error: ${err}`);\n  });\n  return dbConnection;\n}\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"title=index.js",title:"index.js"},"const express = require('express');\nconst mongoose = require(\"mongoose\");\nconst connectDB = require(\"./config/db.js\"); \n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\nconnectDB();\n\napp.get(\"/\", (request, response) => {\n    response.send({ message: \"Hello from an Express API!\" });\n});\n\napp.listen(PORT, () => {\nconsole.log(`Server running at http://localhost:${PORT}`);\n});\n\n\nconst usuarioSchema = new mongoose.Schema({\n    nome: String,\n    idade: Number,\n  });\n  \nconst usuarioModel = mongoose.model('dados', usuarioSchema);\n\n\napp.get('/usuarios', async (req, res) => {\n    try {\n        const model = await usuarioModel.find();\n        res.json(model);\n    } catch (error) {\n        res.status(500).json({ message: error.message });\n    }\n});\n\napp.post('/usuarios', async (req, res) => {\n    const model = new usuarioModel(req.body);\n  \n    try {\n      const novoExemplo = await model.save();\n      res.status(201).json(novoExemplo);\n    } catch (error) {\n      res.status(400).json({ message: error.message });\n    }\n  });\n")))}d.isMDXComponent=!0}}]);